// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Vote.proto
// Protobuf C++ Version: 5.26.1

#include "Vote.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protos {

inline constexpr VotesCountForPartyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VotesCountForPartyRequest::VotesCountForPartyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VotesCountForPartyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotesCountForPartyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotesCountForPartyRequestDefaultTypeInternal() {}
  union {
    VotesCountForPartyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotesCountForPartyRequestDefaultTypeInternal _VotesCountForPartyRequest_default_instance_;

inline constexpr VotesCountForPartyReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        votescount_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VotesCountForPartyReply::VotesCountForPartyReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VotesCountForPartyReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotesCountForPartyReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotesCountForPartyReplyDefaultTypeInternal() {}
  union {
    VotesCountForPartyReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotesCountForPartyReplyDefaultTypeInternal _VotesCountForPartyReply_default_instance_;

inline constexpr VoteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : party_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        originstate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currentstate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        clientid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VoteRequest::VoteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteRequestDefaultTypeInternal() {}
  union {
    VoteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteRequestDefaultTypeInternal _VoteRequest_default_instance_;

inline constexpr VoteReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : party_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        originstate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currentstate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        clientid_{0},
        serverid_{0},
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VoteReply::VoteReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VoteReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteReplyDefaultTypeInternal() {}
  union {
    VoteReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteReplyDefaultTypeInternal _VoteReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StartElectionsRequest::StartElectionsRequest(::_pbi::ConstantInitialized) {}
struct StartElectionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartElectionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartElectionsRequestDefaultTypeInternal() {}
  union {
    StartElectionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartElectionsRequestDefaultTypeInternal _StartElectionsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StartElectionsReply::StartElectionsReply(::_pbi::ConstantInitialized) {}
struct StartElectionsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartElectionsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartElectionsReplyDefaultTypeInternal() {}
  union {
    StartElectionsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartElectionsReplyDefaultTypeInternal _StartElectionsReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR EndElectionsRequest::EndElectionsRequest(::_pbi::ConstantInitialized) {}
struct EndElectionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndElectionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndElectionsRequestDefaultTypeInternal() {}
  union {
    EndElectionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndElectionsRequestDefaultTypeInternal _EndElectionsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR EndElectionsReply::EndElectionsReply(::_pbi::ConstantInitialized) {}
struct EndElectionsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndElectionsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndElectionsReplyDefaultTypeInternal() {}
  union {
    EndElectionsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndElectionsReplyDefaultTypeInternal _EndElectionsReply_default_instance_;
}  // namespace protos
static ::_pb::Metadata file_level_metadata_Vote_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Vote_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Vote_2eproto = nullptr;
const ::uint32_t
    TableStruct_Vote_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::VoteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protos::VoteRequest, _impl_.clientid_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteRequest, _impl_.party_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteRequest, _impl_.originstate_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteRequest, _impl_.currentstate_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteRequest, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _impl_.clientid_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _impl_.party_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _impl_.originstate_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _impl_.currentstate_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::protos::VoteReply, _impl_.serverid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::StartElectionsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::StartElectionsReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::EndElectionsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::EndElectionsReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyRequest, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyRequest, _impl_.party_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyReply, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyReply, _impl_.party_),
        PROTOBUF_FIELD_OFFSET(::protos::VotesCountForPartyReply, _impl_.votescount_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::protos::VoteRequest)},
        {13, -1, -1, sizeof(::protos::VoteReply)},
        {27, -1, -1, sizeof(::protos::StartElectionsRequest)},
        {35, -1, -1, sizeof(::protos::StartElectionsReply)},
        {43, -1, -1, sizeof(::protos::EndElectionsRequest)},
        {51, -1, -1, sizeof(::protos::EndElectionsReply)},
        {59, -1, -1, sizeof(::protos::VotesCountForPartyRequest)},
        {69, -1, -1, sizeof(::protos::VotesCountForPartyReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protos::_VoteRequest_default_instance_._instance,
    &::protos::_VoteReply_default_instance_._instance,
    &::protos::_StartElectionsRequest_default_instance_._instance,
    &::protos::_StartElectionsReply_default_instance_._instance,
    &::protos::_EndElectionsRequest_default_instance_._instance,
    &::protos::_EndElectionsReply_default_instance_._instance,
    &::protos::_VotesCountForPartyRequest_default_instance_._instance,
    &::protos::_VotesCountForPartyReply_default_instance_._instance,
};
const char descriptor_table_protodef_Vote_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nVote.proto\022\006protos\"l\n\013VoteRequest\022\020\n\010c"
    "lientID\030\001 \001(\005\022\r\n\005party\030\002 \001(\t\022\023\n\013originSt"
    "ate\030\003 \001(\t\022\024\n\014currentState\030\004 \001(\t\022\021\n\ttimeS"
    "tamp\030\005 \001(\004\"|\n\tVoteReply\022\020\n\010clientID\030\001 \001("
    "\005\022\r\n\005party\030\002 \001(\t\022\023\n\013originState\030\003 \001(\t\022\024\n"
    "\014currentState\030\004 \001(\t\022\021\n\ttimeStamp\030\005 \001(\004\022\020"
    "\n\010serverID\030\006 \001(\005\"\027\n\025StartElectionsReques"
    "t\"\025\n\023StartElectionsReply\"\025\n\023EndElections"
    "Request\"\023\n\021EndElectionsReply\"9\n\031VotesCou"
    "ntForPartyRequest\022\r\n\005state\030\001 \001(\t\022\r\n\005part"
    "y\030\002 \001(\t\"K\n\027VotesCountForPartyReply\022\r\n\005st"
    "ate\030\001 \001(\t\022\r\n\005party\030\002 \001(\t\022\022\n\nvotesCount\030\003"
    " \001(\0052\235\003\n\007Greeter\0227\n\013ReceiveVote\022\023.protos"
    ".VoteRequest\032\021.protos.VoteReply\"\000\022U\n\025Rec"
    "eiveStartElections\022\035.protos.StartElectio"
    "nsRequest\032\033.protos.StartElectionsReply\"\000"
    "\022O\n\023ReceiveEndElections\022\033.protos.EndElec"
    "tionsRequest\032\031.protos.EndElectionsReply\""
    "\000\022U\n\rReceiveStatus\022!.protos.VotesCountFo"
    "rPartyRequest\032\037.protos.VotesCountForPart"
    "yReply\"\000\022Z\n\020ReciveVotesCount\022!.protos.Vo"
    "tesCountForPartyRequest\032\037.protos.VotesCo"
    "untForPartyReply\"\0000\001b\006proto3"
};
static ::absl::once_flag descriptor_table_Vote_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Vote_2eproto = {
    false,
    false,
    908,
    descriptor_table_protodef_Vote_2eproto,
    "Vote.proto",
    &descriptor_table_Vote_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_Vote_2eproto::offsets,
    file_level_metadata_Vote_2eproto,
    file_level_enum_descriptors_Vote_2eproto,
    file_level_service_descriptors_Vote_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Vote_2eproto_getter() {
  return &descriptor_table_Vote_2eproto;
}
namespace protos {
// ===================================================================

class VoteRequest::_Internal {
 public:
};

VoteRequest::VoteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.VoteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : party_(arena, from.party_),
        originstate_(arena, from.originstate_),
        currentstate_(arena, from.currentstate_),
        _cached_size_{0} {}

VoteRequest::VoteRequest(
    ::google::protobuf::Arena* arena,
    const VoteRequest& from)
    : ::google::protobuf::Message(arena) {
  VoteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, clientid_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::clientid_));

  // @@protoc_insertion_point(copy_constructor:protos.VoteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : party_(arena),
        originstate_(arena),
        currentstate_(arena),
        _cached_size_{0} {}

inline void VoteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, clientid_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::clientid_));
}
VoteRequest::~VoteRequest() {
  // @@protoc_insertion_point(destructor:protos.VoteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VoteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.party_.Destroy();
  _impl_.originstate_.Destroy();
  _impl_.currentstate_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VoteRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_._cached_size_),
              false,
          },
          &VoteRequest::MergeImpl,
          &VoteRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.VoteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.party_.ClearToEmpty();
  _impl_.originstate_.ClearToEmpty();
  _impl_.currentstate_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.clientid_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.clientid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VoteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 55, 2> VoteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VoteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protos::VoteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 clientID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoteRequest, _impl_.clientid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.clientid_)}},
    // string party = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.party_)}},
    // string originState = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.originstate_)}},
    // string currentState = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.currentstate_)}},
    // uint64 timeStamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VoteRequest, _impl_.timestamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 clientID = 1;
    {PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.clientid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string party = 2;
    {PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.party_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string originState = 3;
    {PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.originstate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currentState = 4;
    {PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.currentstate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timeStamp = 5;
    {PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\22\0\5\13\14\0\0\0"
    "protos.VoteRequest"
    "party"
    "originState"
    "currentState"
  }},
};

::uint8_t* VoteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.VoteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 clientID = 1;
  if (this->_internal_clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_clientid(), target);
  }

  // string party = 2;
  if (!this->_internal_party().empty()) {
    const std::string& _s = this->_internal_party();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VoteRequest.party");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string originState = 3;
  if (!this->_internal_originstate().empty()) {
    const std::string& _s = this->_internal_originstate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VoteRequest.originState");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string currentState = 4;
  if (!this->_internal_currentstate().empty()) {
    const std::string& _s = this->_internal_currentstate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VoteRequest.currentState");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // uint64 timeStamp = 5;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.VoteRequest)
  return target;
}

::size_t VoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.VoteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string party = 2;
  if (!this->_internal_party().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_party());
  }

  // string originState = 3;
  if (!this->_internal_originstate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_originstate());
  }

  // string currentState = 4;
  if (!this->_internal_currentstate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currentstate());
  }

  // uint64 timeStamp = 5;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // int32 clientID = 1;
  if (this->_internal_clientid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_clientid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VoteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoteRequest*>(&to_msg);
  auto& from = static_cast<const VoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.VoteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_party().empty()) {
    _this->_internal_set_party(from._internal_party());
  }
  if (!from._internal_originstate().empty()) {
    _this->_internal_set_originstate(from._internal_originstate());
  }
  if (!from._internal_currentstate().empty()) {
    _this->_internal_set_currentstate(from._internal_currentstate());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_clientid() != 0) {
    _this->_impl_.clientid_ = from._impl_.clientid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoteRequest::CopyFrom(const VoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.VoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VoteRequest::IsInitialized() const {
  return true;
}

void VoteRequest::InternalSwap(VoteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.party_, &other->_impl_.party_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.originstate_, &other->_impl_.originstate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currentstate_, &other->_impl_.currentstate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.clientid_)
      + sizeof(VoteRequest::_impl_.clientid_)
      - PROTOBUF_FIELD_OFFSET(VoteRequest, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata VoteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[0]);
}
// ===================================================================

class VoteReply::_Internal {
 public:
};

VoteReply::VoteReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.VoteReply)
}
inline PROTOBUF_NDEBUG_INLINE VoteReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : party_(arena, from.party_),
        originstate_(arena, from.originstate_),
        currentstate_(arena, from.currentstate_),
        _cached_size_{0} {}

VoteReply::VoteReply(
    ::google::protobuf::Arena* arena,
    const VoteReply& from)
    : ::google::protobuf::Message(arena) {
  VoteReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clientid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, clientid_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, clientid_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:protos.VoteReply)
}
inline PROTOBUF_NDEBUG_INLINE VoteReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : party_(arena),
        originstate_(arena),
        currentstate_(arena),
        _cached_size_{0} {}

inline void VoteReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clientid_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, clientid_) +
               sizeof(Impl_::timestamp_));
}
VoteReply::~VoteReply() {
  // @@protoc_insertion_point(destructor:protos.VoteReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VoteReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.party_.Destroy();
  _impl_.originstate_.Destroy();
  _impl_.currentstate_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VoteReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VoteReply, _impl_._cached_size_),
              false,
          },
          &VoteReply::MergeImpl,
          &VoteReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VoteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.VoteReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.party_.ClearToEmpty();
  _impl_.originstate_.ClearToEmpty();
  _impl_.currentstate_.ClearToEmpty();
  ::memset(&_impl_.clientid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.clientid_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VoteReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 53, 2> VoteReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VoteReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protos::VoteReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 clientID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoteReply, _impl_.clientid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.clientid_)}},
    // string party = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.party_)}},
    // string originState = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.originstate_)}},
    // string currentState = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.currentstate_)}},
    // uint64 timeStamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VoteReply, _impl_.timestamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.timestamp_)}},
    // int32 serverID = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoteReply, _impl_.serverid_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.serverid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 clientID = 1;
    {PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.clientid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string party = 2;
    {PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.party_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string originState = 3;
    {PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.originstate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currentState = 4;
    {PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.currentstate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timeStamp = 5;
    {PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int32 serverID = 6;
    {PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.serverid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\5\13\14\0\0\0"
    "protos.VoteReply"
    "party"
    "originState"
    "currentState"
  }},
};

::uint8_t* VoteReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.VoteReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 clientID = 1;
  if (this->_internal_clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_clientid(), target);
  }

  // string party = 2;
  if (!this->_internal_party().empty()) {
    const std::string& _s = this->_internal_party();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VoteReply.party");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string originState = 3;
  if (!this->_internal_originstate().empty()) {
    const std::string& _s = this->_internal_originstate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VoteReply.originState");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string currentState = 4;
  if (!this->_internal_currentstate().empty()) {
    const std::string& _s = this->_internal_currentstate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VoteReply.currentState");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // uint64 timeStamp = 5;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_timestamp(), target);
  }

  // int32 serverID = 6;
  if (this->_internal_serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_serverid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.VoteReply)
  return target;
}

::size_t VoteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.VoteReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string party = 2;
  if (!this->_internal_party().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_party());
  }

  // string originState = 3;
  if (!this->_internal_originstate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_originstate());
  }

  // string currentState = 4;
  if (!this->_internal_currentstate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currentstate());
  }

  // int32 clientID = 1;
  if (this->_internal_clientid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_clientid());
  }

  // int32 serverID = 6;
  if (this->_internal_serverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_serverid());
  }

  // uint64 timeStamp = 5;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VoteReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoteReply*>(&to_msg);
  auto& from = static_cast<const VoteReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.VoteReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_party().empty()) {
    _this->_internal_set_party(from._internal_party());
  }
  if (!from._internal_originstate().empty()) {
    _this->_internal_set_originstate(from._internal_originstate());
  }
  if (!from._internal_currentstate().empty()) {
    _this->_internal_set_currentstate(from._internal_currentstate());
  }
  if (from._internal_clientid() != 0) {
    _this->_impl_.clientid_ = from._impl_.clientid_;
  }
  if (from._internal_serverid() != 0) {
    _this->_impl_.serverid_ = from._impl_.serverid_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoteReply::CopyFrom(const VoteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.VoteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VoteReply::IsInitialized() const {
  return true;
}

void VoteReply::InternalSwap(VoteReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.party_, &other->_impl_.party_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.originstate_, &other->_impl_.originstate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currentstate_, &other->_impl_.currentstate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.timestamp_)
      + sizeof(VoteReply::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(VoteReply, _impl_.clientid_)>(
          reinterpret_cast<char*>(&_impl_.clientid_),
          reinterpret_cast<char*>(&other->_impl_.clientid_));
}

::google::protobuf::Metadata VoteReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[1]);
}
// ===================================================================

class StartElectionsRequest::_Internal {
 public:
};

StartElectionsRequest::StartElectionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protos.StartElectionsRequest)
}
StartElectionsRequest::StartElectionsRequest(
    ::google::protobuf::Arena* arena,
    const StartElectionsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StartElectionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protos.StartElectionsRequest)
}









::google::protobuf::Metadata StartElectionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[2]);
}
// ===================================================================

class StartElectionsReply::_Internal {
 public:
};

StartElectionsReply::StartElectionsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protos.StartElectionsReply)
}
StartElectionsReply::StartElectionsReply(
    ::google::protobuf::Arena* arena,
    const StartElectionsReply& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StartElectionsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protos.StartElectionsReply)
}









::google::protobuf::Metadata StartElectionsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[3]);
}
// ===================================================================

class EndElectionsRequest::_Internal {
 public:
};

EndElectionsRequest::EndElectionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protos.EndElectionsRequest)
}
EndElectionsRequest::EndElectionsRequest(
    ::google::protobuf::Arena* arena,
    const EndElectionsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  EndElectionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protos.EndElectionsRequest)
}









::google::protobuf::Metadata EndElectionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[4]);
}
// ===================================================================

class EndElectionsReply::_Internal {
 public:
};

EndElectionsReply::EndElectionsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protos.EndElectionsReply)
}
EndElectionsReply::EndElectionsReply(
    ::google::protobuf::Arena* arena,
    const EndElectionsReply& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  EndElectionsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protos.EndElectionsReply)
}









::google::protobuf::Metadata EndElectionsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[5]);
}
// ===================================================================

class VotesCountForPartyRequest::_Internal {
 public:
};

VotesCountForPartyRequest::VotesCountForPartyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.VotesCountForPartyRequest)
}
inline PROTOBUF_NDEBUG_INLINE VotesCountForPartyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : state_(arena, from.state_),
        party_(arena, from.party_),
        _cached_size_{0} {}

VotesCountForPartyRequest::VotesCountForPartyRequest(
    ::google::protobuf::Arena* arena,
    const VotesCountForPartyRequest& from)
    : ::google::protobuf::Message(arena) {
  VotesCountForPartyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protos.VotesCountForPartyRequest)
}
inline PROTOBUF_NDEBUG_INLINE VotesCountForPartyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : state_(arena),
        party_(arena),
        _cached_size_{0} {}

inline void VotesCountForPartyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VotesCountForPartyRequest::~VotesCountForPartyRequest() {
  // @@protoc_insertion_point(destructor:protos.VotesCountForPartyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VotesCountForPartyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.state_.Destroy();
  _impl_.party_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VotesCountForPartyRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VotesCountForPartyRequest, _impl_._cached_size_),
              false,
          },
          &VotesCountForPartyRequest::MergeImpl,
          &VotesCountForPartyRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VotesCountForPartyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.VotesCountForPartyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.ClearToEmpty();
  _impl_.party_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VotesCountForPartyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> VotesCountForPartyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VotesCountForPartyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protos::VotesCountForPartyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string party = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VotesCountForPartyRequest, _impl_.party_)}},
    // string state = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VotesCountForPartyRequest, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string state = 1;
    {PROTOBUF_FIELD_OFFSET(VotesCountForPartyRequest, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string party = 2;
    {PROTOBUF_FIELD_OFFSET(VotesCountForPartyRequest, _impl_.party_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\5\5\0\0\0\0\0"
    "protos.VotesCountForPartyRequest"
    "state"
    "party"
  }},
};

::uint8_t* VotesCountForPartyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.VotesCountForPartyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VotesCountForPartyRequest.state");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string party = 2;
  if (!this->_internal_party().empty()) {
    const std::string& _s = this->_internal_party();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VotesCountForPartyRequest.party");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.VotesCountForPartyRequest)
  return target;
}

::size_t VotesCountForPartyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.VotesCountForPartyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // string party = 2;
  if (!this->_internal_party().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_party());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VotesCountForPartyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotesCountForPartyRequest*>(&to_msg);
  auto& from = static_cast<const VotesCountForPartyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.VotesCountForPartyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_party().empty()) {
    _this->_internal_set_party(from._internal_party());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotesCountForPartyRequest::CopyFrom(const VotesCountForPartyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.VotesCountForPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VotesCountForPartyRequest::IsInitialized() const {
  return true;
}

void VotesCountForPartyRequest::InternalSwap(VotesCountForPartyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.party_, &other->_impl_.party_, arena);
}

::google::protobuf::Metadata VotesCountForPartyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[6]);
}
// ===================================================================

class VotesCountForPartyReply::_Internal {
 public:
};

VotesCountForPartyReply::VotesCountForPartyReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.VotesCountForPartyReply)
}
inline PROTOBUF_NDEBUG_INLINE VotesCountForPartyReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : state_(arena, from.state_),
        party_(arena, from.party_),
        _cached_size_{0} {}

VotesCountForPartyReply::VotesCountForPartyReply(
    ::google::protobuf::Arena* arena,
    const VotesCountForPartyReply& from)
    : ::google::protobuf::Message(arena) {
  VotesCountForPartyReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.votescount_ = from._impl_.votescount_;

  // @@protoc_insertion_point(copy_constructor:protos.VotesCountForPartyReply)
}
inline PROTOBUF_NDEBUG_INLINE VotesCountForPartyReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : state_(arena),
        party_(arena),
        _cached_size_{0} {}

inline void VotesCountForPartyReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.votescount_ = {};
}
VotesCountForPartyReply::~VotesCountForPartyReply() {
  // @@protoc_insertion_point(destructor:protos.VotesCountForPartyReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VotesCountForPartyReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.state_.Destroy();
  _impl_.party_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VotesCountForPartyReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_._cached_size_),
              false,
          },
          &VotesCountForPartyReply::MergeImpl,
          &VotesCountForPartyReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VotesCountForPartyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.VotesCountForPartyReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.ClearToEmpty();
  _impl_.party_.ClearToEmpty();
  _impl_.votescount_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VotesCountForPartyReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> VotesCountForPartyReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VotesCountForPartyReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protos::VotesCountForPartyReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string state = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_.state_)}},
    // string party = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_.party_)}},
    // int32 votesCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotesCountForPartyReply, _impl_.votescount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_.votescount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string state = 1;
    {PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string party = 2;
    {PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_.party_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 votesCount = 3;
    {PROTOBUF_FIELD_OFFSET(VotesCountForPartyReply, _impl_.votescount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\36\5\5\0\0\0\0\0"
    "protos.VotesCountForPartyReply"
    "state"
    "party"
  }},
};

::uint8_t* VotesCountForPartyReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.VotesCountForPartyReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VotesCountForPartyReply.state");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string party = 2;
  if (!this->_internal_party().empty()) {
    const std::string& _s = this->_internal_party();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protos.VotesCountForPartyReply.party");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 votesCount = 3;
  if (this->_internal_votescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_votescount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.VotesCountForPartyReply)
  return target;
}

::size_t VotesCountForPartyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.VotesCountForPartyReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // string party = 2;
  if (!this->_internal_party().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_party());
  }

  // int32 votesCount = 3;
  if (this->_internal_votescount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_votescount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VotesCountForPartyReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotesCountForPartyReply*>(&to_msg);
  auto& from = static_cast<const VotesCountForPartyReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.VotesCountForPartyReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_party().empty()) {
    _this->_internal_set_party(from._internal_party());
  }
  if (from._internal_votescount() != 0) {
    _this->_impl_.votescount_ = from._impl_.votescount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotesCountForPartyReply::CopyFrom(const VotesCountForPartyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.VotesCountForPartyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VotesCountForPartyReply::IsInitialized() const {
  return true;
}

void VotesCountForPartyReply::InternalSwap(VotesCountForPartyReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.party_, &other->_impl_.party_, arena);
        swap(_impl_.votescount_, other->_impl_.votescount_);
}

::google::protobuf::Metadata VotesCountForPartyReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_Vote_2eproto_getter,
                                   &descriptor_table_Vote_2eproto_once,
                                   file_level_metadata_Vote_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_Vote_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
